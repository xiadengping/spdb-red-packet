{"version":3,"sources":["../src/core.js"],"names":["debug","WechatCore","PROP","uuid","uin","sid","skey","passTicket","formatedSyncKey","webwxDataTicket","syncKey","List","CONF","user","mediaSend","request","Promise","resolve","then","method","url","API_jsLogin","window","QRLogin","eval","res","data","equal","code","catch","err","Error","params","API_login","notEqual","redirect_uri","match","rediUri","userAvatar","fun","pm","headers","forEach","test","item","Date","BaseRequest","getBaseRequest","API_webwxinit","BaseResponse","Ret","SKey","updateSyncKey","Object","assign","User","to","pass_ticket","lang","API_webwxstatusnotify","API_webwxgetcontact","MemberList","contacts","length","API_webwxbatchgetcontact","ContactList","text","JSON","stringify","API_webwxreport","API_synccheck","synccheck","retcode","SYNCCHECK_RET_SUCCESS","selector","API_webwxsync","SyncKey","SyncCheckKey","synckeylist","e","o","n","push","join","redirect","type","API_webwxlogout","msg","sendText","clientMsgId","MSGTYPE_TEXT","API_webwxsendmsg","id","MSGTYPE_EMOTICON","indexOf","Msg","MediaId","EMoticonMd5","API_webwxsendemoticon","file","filename","name","size","ext","mediatype","reject","Buffer","isBuffer","lookup","readable","path","basename","pipe","buffer","uploadMediaRequest","ClientMediaId","TotalLen","StartPos","DataLen","MediaType","UploadType","FromUserName","UserName","ToUserName","form","append","toGMTString","encodeURI","contentType","knownLength","getHeaders","f","API_webwxuploadmedia","mediaId","ok","MSGTYPE_IMAGE","API_webwxsendmsgimg","MSGTYPE_VIDEO","API_webwxsendmsgvedio","APPMSGTYPE_ATTACH","API_webwxsendappmsg","msgId","MsgID","API_webwxgetmsgimg","responseType","API_webwxgetvideo","API_webwxgetvoice","HeadImgUrl","origin","Ticket","API_webwxverifyuser","ChatRoomName","AddMemberList","toString","DelMemberList","InviteMemberList","API_webwxupdatechatroom","OP","CmdId","API_webwxoplog","Uin","parseInt","Sid","Skey","DeviceID"],"mappings":"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","file":"core.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport bl from 'bl'\nimport _debug from 'debug'\nimport FormData from 'form-data'\nimport mime from 'mime'\nimport {\n  getCONF,\n  Request,\n  isStandardBrowserEnv,\n  assert,\n  getClientMsgId,\n  getDeviceID\n} from './util'\n\nconst debug = _debug('core')\n\nexport default class WechatCore {\n\n  constructor() {\n    this.PROP = {\n      uuid: '',\n      uin: '',\n      sid: '',\n      skey: '',\n      passTicket: '',\n      formatedSyncKey: '',\n      webwxDataTicket: '',\n      syncKey: {\n        List: []\n      }\n    }\n\n    this.CONF = getCONF()\n    this.user = {}\n    this.mediaSend = 0\n    this.request = new Request()\n  }\n\n  getUUID() {\n    return Promise.resolve().then(() => {\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_jsLogin\n      }).then(res => {\n        let window = {\n          QRLogin: {}\n        }\n        eval(res.data)\n        assert.equal(window.QRLogin.code, 200, res)\n\n        return this.PROP.uuid = window.QRLogin.uuid\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取UUID失败')\n    })\n  }\n\n  checkLogin() {\n    return Promise.resolve().then(() => {\n      let params = {\n        'tip': 0,\n        'uuid': this.PROP.uuid,\n        'loginicon': true\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_login,\n        params: params\n      }).then(res => {\n        let window = {}\n        eval(res.data)\n        assert.notEqual(window.code, 400, res)\n        if (window.code == 200) {\n          this.CONF = getCONF(window.redirect_uri.match(/(?:\\w+\\.)+\\w+/)[0])\n          this.rediUri = window.redirect_uri\n        } else if (window.code == 201 && window.userAvatar) {\n          this.user.userAvatar = window.userAvatar\n        }\n        return window\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取手机确认登录信息失败')\n    })\n  }\n\n  login() {\n    return Promise.resolve().then(() => {\n      return this.request({\n        method: 'GET',\n        url: this.rediUri,\n        params: {\n          fun: 'new'\n        }\n      }).then(res => {\n        let pm = res.data.match(/<ret>(.*)<\\/ret>/)\n        if (pm && pm[1] == 0) {\n          this.PROP.skey = res.data.match(/<skey>(.*)<\\/skey>/)[1]\n          this.PROP.sid = res.data.match(/<wxsid>(.*)<\\/wxsid>/)[1]\n          this.PROP.uin = res.data.match(/<wxuin>(.*)<\\/wxuin>/)[1]\n          this.PROP.passTicket = res.data.match(/<pass_ticket>(.*)<\\/pass_ticket>/)[1]\n        }\n        if (res.headers['set-cookie']) {\n          res.headers['set-cookie'].forEach(item => {\n            if (/webwx.*?data.*?ticket/i.test(item)) {\n              this.PROP.webwxDataTicket = item.match(/=(.*?);/)[1]\n            } else if (/wxuin/i.test(item)) {\n              this.PROP.uin = item.match(/=(.*?);/)[1]\n            } else if (/wxsid/i.test(item)) {\n              this.PROP.sid = item.match(/=(.*?);/)[1]\n            }\n          })\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('登录失败')\n    })\n  }\n\n  init() {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'skey': this.PROP.skey,\n        'r': ~new Date()\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxinit,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n        this.PROP.skey = data.SKey || this.PROP.skey\n        this.updateSyncKey(data)\n        Object.assign(this.user, data.User)\n        return this.user\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('微信初始化失败')\n    })\n  }\n\n  notifyMobile(to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket,\n        lang: 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Code': to ? 1 : 3,\n        'FromUserName': this.user['UserName'],\n        'ToUserName': to || this.user['UserName'],\n        'ClientMsgId': getClientMsgId()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxstatusnotify,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('手机状态通知失败')\n    })\n  }\n\n  getContact() {\n    return Promise.resolve().then(() => {\n      let params = {\n        'lang': 'zh_CN',\n        'pass_ticket': this.PROP.passTicket,\n        'seq': 0,\n        'skey': this.PROP.skey,\n        'r': +new Date()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxgetcontact,\n        params: params\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        return data.MemberList\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取通讯录失败')\n    })\n  }\n\n  batchGetContact(contacts) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'type': 'ex',\n        'r': +new Date(),\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Count': contacts.length,\n        'List': contacts\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxbatchgetcontact,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        return data.ContactList\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('批量获取联系人失败')\n    })\n  }\n\n  statReport(text) {\n    return Promise.resolve().then(() => {\n      text = text || {\n        \"type\": \"[action-record]\",\n        \"data\": {\n          \"actions\": [{\n            \"type\": \"click\",\n            \"action\": \"发送框\",\n            \"time\": +new Date()\n          }]\n        }\n      }\n      text = JSON.stringify(text)\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'new',\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Count': 1,\n        'List': [{\n          'Text': text,\n          'Type': 1\n        }]\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxreport,\n        params: params,\n        data: data\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('状态报告失败')\n    })\n  }\n\n  syncCheck() {\n    return Promise.resolve().then(() => {\n      let params = {\n        'r': +new Date(),\n        'sid': this.PROP.sid,\n        'uin': this.PROP.uin,\n        'skey': this.PROP.skey,\n        'deviceid': getDeviceID(),\n        'synckey': this.PROP.formatedSyncKey\n      }\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_synccheck,\n        params: params\n      }).then(res => {\n        let window = {\n          synccheck: {}\n        }\n        eval(res.data)\n        assert.equal(window.synccheck.retcode, this.CONF.SYNCCHECK_RET_SUCCESS, res)\n\n        return window.synccheck.selector\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('同步失败')\n    })\n  }\n\n  sync() {\n    return Promise.resolve().then(() => {\n      let params = {\n        'sid': this.PROP.sid,\n        'skey': this.PROP.skey,\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'SyncKey': this.PROP.syncKey,\n        'rr': ~new Date()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsync,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n\n        this.updateSyncKey(data)\n        this.PROP.skey = data.SKey || this.PROP.skey\n        return data\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取新信息失败')\n    })\n  }\n\n  updateSyncKey(data) {\n    if (data.SyncKey) {\n      this.PROP.syncKey = data.SyncKey\n    }\n    if (data.SyncCheckKey) {\n      let synckeylist = []\n      for (let e = data.SyncCheckKey.List, o = 0, n = e.length; n > o; o++) {\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\n      }\n      this.PROP.formatedSyncKey = synckeylist.join('|')\n    } else if (!this.PROP.formatedSyncKey && data.SyncKey) {\n      let synckeylist = []\n      for (let e = data.SyncKey.List, o = 0, n = e.length; n > o; o++) {\n        synckeylist.push(e[o]['Key'] + '_' + e[o]['Val'])\n      }\n      this.PROP.formatedSyncKey = synckeylist.join('|')\n    }\n  }\n\n  logout() {\n    return Promise.resolve().then(() => {\n      let params = {\n        redirect: 1,\n        type: 0,\n        skey: this.PROP.skey,\n        lang: 'zh_CN'\n      }\n\n      // data加上会出错，不加data也能登出\n      // let data = {\n      //   sid: this.PROP.sid,\n      //   uin: this.PROP.uin\n      // }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxlogout,\n        params: params\n      }).then(res => {\n        return '登出成功'\n      }).catch(err => {\n        debug(err)\n        return '可能登出成功'\n      })\n    })\n  }\n\n  sendMsg(msg, to) {\n    return this.sendText(msg, to)\n  }\n\n  sendText(msg, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_TEXT,\n          'Content': msg,\n          'FromUserName': this.user['UserName'],\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('发送文本信息失败')\n    })\n  }\n\n  sendEmoticon(id, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'fun': 'sys',\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_EMOTICON,\n          'EmojiFlag': 2,\n          'FromUserName': this.user['UserName'],\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        },\n        'Scene': 0\n      }\n\n      if (id.indexOf('@') === 0) {\n        data.Msg.MediaId = id\n      } else {\n        data.Msg.EMoticonMd5 = id\n      }\n\n      this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendemoticon,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('发送表情信息失败')\n    })\n  }\n\n  // file: Stream, Buffer, File\n  uploadMedia(file, filename) {\n    return Promise.resolve().then(() => {\n      let name, type, size, ext, mediatype, data\n      return new Promise((resolve, reject) => {\n        if (isStandardBrowserEnv) {\n          name = file.name\n          type = file.type\n          size = file.size\n          data = file\n          return resolve()\n        } else if (Buffer.isBuffer(file)) {\n          if (!filename) {\n            return reject(new Error('文件名未知'))\n          }\n          name = filename\n          type = mime.lookup(name)\n          size = file.length\n          data = file\n          return resolve()\n        } else if (file.readable) {\n          if (!file.path && !filename) {\n            return reject(new Error('文件名未知'))\n          }\n          name = path.basename(file.path || filename)\n          type = mime.lookup(name)\n          file.pipe(bl((err, buffer) => {\n            if (err) {\n              return reject(err)\n            }\n            size = buffer.length\n            data = buffer\n            return resolve()\n          }))\n        }\n      }).then(() => {\n        ext = name.match(/.*\\.(.*)/)\n        if (ext) {\n          ext = ext[1]\n        }\n\n        switch (ext) {\n          case 'bmp':\n          case 'jpeg':\n          case 'jpg':\n          case 'png':\n            mediatype = 'pic'\n            break\n          case 'mp4':\n            mediatype = 'video'\n            break\n          default:\n            mediatype = 'doc'\n        }\n\n        let clientMsgId = getClientMsgId()\n\n        let uploadMediaRequest = JSON.stringify({\n          BaseRequest: this.getBaseRequest(),\n          ClientMediaId: clientMsgId,\n          TotalLen: size,\n          StartPos: 0,\n          DataLen: size,\n          MediaType: 4,\n          UploadType: 2,\n          FromUserName: this.user.UserName,\n          ToUserName: this.user.UserName\n        })\n\n        let form = new FormData()\n        form.append('name', name)\n        form.append('type', type)\n        form.append('lastModifiedDate', new Date().toGMTString())\n        form.append('size', size)\n        form.append('mediatype', mediatype)\n        form.append('uploadmediarequest', uploadMediaRequest)\n        form.append('webwx_data_ticket', this.PROP.webwxDataTicket)\n        form.append('pass_ticket', encodeURI(this.PROP.passTicket))\n        form.append('filename', data, {\n          filename: name,\n          contentType: type,\n          knownLength: size\n        })\n        return new Promise((resolve, reject) => {\n          form.pipe(bl((err, buffer) => {\n            if (err) {\n              return reject(err)\n            }\n            return resolve({\n              buffer: buffer,\n              headers: form.getHeaders()\n            })\n          }))\n        })\n      }).then(data => {\n        let params = {\n          f: 'json'\n        }\n\n        return this.request({\n          method: 'POST',\n          url: this.CONF.API_webwxuploadmedia,\n          headers: data.headers,\n          params: params,\n          data: data.buffer\n        })\n      }).then(res => {\n        let data = res.data\n        let mediaId = data.MediaId\n        assert.ok(mediaId, res)\n\n        return {\n          name: name,\n          size: size,\n          ext: ext,\n          mediatype: mediatype,\n          mediaId: mediaId\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('上传媒体文件失败')\n    })\n  }\n\n  sendPic(mediaId, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_IMAGE,\n          'MediaId': mediaId,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsgimg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('发送图片失败')\n    })\n  }\n\n  sendVideo(mediaId, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.MSGTYPE_VIDEO,\n          'MediaId': mediaId,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendmsgvedio,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('发送视频失败')\n    })\n  }\n\n  sendDoc(mediaId, name, size, ext, to) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'fun': 'async',\n        'f': 'json',\n        'lang': 'zh_CN'\n      }\n      let clientMsgId = getClientMsgId()\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Scene': 0,\n        'Msg': {\n          'Type': this.CONF.APPMSGTYPE_ATTACH,\n          'Content': `<appmsg appid='wxeb7ec651dd0aefa9' sdkver=''><title>${name}</title><des></des><action></action><type>6</type><content></content><url></url><lowurl></lowurl><appattach><totallen>${size}</totallen><attachid>${mediaId}</attachid><fileext>${ext}</fileext></appattach><extinfo></extinfo></appmsg>`,\n          'FromUserName': this.user.UserName,\n          'ToUserName': to,\n          'LocalID': clientMsgId,\n          'ClientMsgId': clientMsgId\n        }\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxsendappmsg,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('发送文件失败')\n    })\n  }\n\n  getMsgImg(msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey,\n        type: 'big'\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetmsgimg,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取图片或表情失败')\n    })\n  }\n\n  getVideo(msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetvideo,\n        headers: {\n          'Range': 'bytes=0-'\n        },\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取视频失败')\n    })\n  }\n\n  getVoice(msgId) {\n    return Promise.resolve().then(() => {\n      let params = {\n        MsgID: msgId,\n        skey: this.PROP.skey\n      }\n\n      return this.request({\n        method: 'GET',\n        url: this.CONF.API_webwxgetvoice,\n        params: params,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取声音失败')\n    })\n  }\n\n  getHeadImg(HeadImgUrl) {\n    return Promise.resolve().then(() => {\n      let url = this.CONF.origin + HeadImgUrl\n      return this.request({\n        method: 'GET',\n        url: url,\n        responseType: 'arraybuffer'\n      }).then(res => {\n        return {\n          data: res.data,\n          type: res.headers['content-type']\n        }\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('获取头像失败')\n    })\n  }\n\n  verifyUser(UserName, Ticket) {\n    return Promise.resolve().then(() => {\n      let params = {\n        'pass_ticket': this.PROP.passTicket,\n        'lang': 'zh_CN'\n      }\n      let data = {\n        'BaseRequest': this.getBaseRequest(),\n        'Opcode': 3,\n        'VerifyUserListSize': 1,\n        'VerifyUserList': [{\n          'Value': UserName,\n          'VerifyUserTicket': Ticket\n        }],\n        'VerifyContent': '',\n        'SceneListCount': 1,\n        'SceneList': [33],\n        'skey': this.PROP.skey\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxverifyuser,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('通过好友请求失败')\n    })\n  }\n\n  // fun: 'addmember' or 'delmember' or 'invitemember'\n  updateChatroom(ChatRoomName, MemberList, fun) {\n    return Promise.resolve().then(() => {\n      let params = {\n        fun: fun\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        ChatRoomName: ChatRoomName\n      }\n      if (fun == 'addmember') {\n        data.AddMemberList = MemberList.toString()\n      } else if (fun == 'delmember') {\n        data.DelMemberList = MemberList.toString()\n      } else if (fun == 'invitemember') {\n        data.InviteMemberList = MemberList.toString()\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxupdatechatroom,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('邀请或踢出群成员失败')\n    })\n  }\n\n  // OP: 1 联系人置顶 0 取消置顶\n  opLog(UserName, OP) {\n    return Promise.resolve().then(() => {\n      let params = {\n        pass_ticket: this.PROP.passTicket\n      }\n      let data = {\n        BaseRequest: this.getBaseRequest(),\n        CmdId: 3,\n        OP: OP,\n        UserName: UserName\n      }\n      return this.request({\n        method: 'POST',\n        url: this.CONF.API_webwxoplog,\n        params: params,\n        data: data\n      }).then(res => {\n        let data = res.data\n        assert.equal(data.BaseResponse.Ret, 0, res)\n      })\n    }).catch(err => {\n      debug(err)\n      throw new Error('置顶或取消置顶失败')\n    })\n  }\n\n  getBaseRequest() {\n    return {\n      Uin: parseInt(this.PROP.uin),\n      Sid: this.PROP.sid,\n      Skey: this.PROP.skey,\n      DeviceID: getDeviceID()\n    }\n  }\n}\n"]}