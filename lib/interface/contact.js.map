{"version":3,"sources":["../../src/interface/contact.js"],"names":["getUserByUserName","isRoomContact","isSpContact","isPublicContact","ContactFactory","CONF","memberList","UserName","length","find","contact","getDisplayName","RemarkName","DisplayName","NickName","MemberList","test","SPECIALUSERS","indexOf","VerifyFlag","MM_USERATTRVERIFYFALG_BIZ_BRAND","contactProto","init","instance","__proto__","isSelf","user","canSearch","keyword","toUpperCase","isSatisfy","key","RemarkPYQuanPin","PYQuanPin","Alias","KeyWord","extend","contactObj","Object","create","assign","contacts","getSearchUser","users","push"],"mappings":"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","file":"contact.js","sourcesContent":["import {\n  protoAugment,\n  convertEmoji,\n  getCONF\n} from '../util'\nconst CONF = getCONF()\n\n/* Contact Object Example\n{\n  \"Uin\": 0,\n  \"UserName\": \"\",\n  \"NickName\": \"\",\n  \"HeadImgUrl\": \"\",\n  \"ContactFlag\": 3,\n  \"MemberCount\": 0,\n  \"MemberList\": [],\n  \"RemarkName\": \"\",\n  \"HideInputBarFlag\": 0,\n  \"Sex\": 0,\n  \"Signature\": \"\",\n  \"VerifyFlag\": 8,\n  \"OwnerUin\": 0,\n  \"PYInitial\": \"\",\n  \"PYQuanPin\": \"\",\n  \"RemarkPYInitial\": \"\",\n  \"RemarkPYQuanPin\": \"\",\n  \"StarFriend\": 0,\n  \"AppAccountFlag\": 0,\n  \"Statues\": 0,\n  \"AttrStatus\": 0,\n  \"Province\": \"\",\n  \"City\": \"\",\n  \"Alias\": \"Urinxs\",\n  \"SnsFlag\": 0,\n  \"UniFriend\": 0,\n  \"DisplayName\": \"\",\n  \"ChatRoomId\": 0,\n  \"KeyWord\": \"gh_\",\n  \"EncryChatRoomId\": \"\"\n}\n*/\nexport function getUserByUserName(memberList, UserName) {\n  if (!memberList.length) return null\n\n  return memberList.find(contact => contact.UserName === UserName)\n}\n\nexport function getDisplayName(contact) {\n  if (isRoomContact(contact)) {\n    return '[群] ' + (contact.RemarkName || contact.DisplayName || contact.NickName ||\n      `${getDisplayName(contact.MemberList[0])}、${getDisplayName(contact.MemberList[1])}`)\n  } else {\n    return contact.DisplayName || contact.RemarkName || contact.NickName || contact.UserName\n  }\n}\n\nexport function isRoomContact(contact) {\n  return contact.UserName ? /^@@|@chatroom$/.test(contact.UserName) : false\n}\n\nexport function isSpContact(contact) {\n  return CONF.SPECIALUSERS.indexOf(contact.UserName) >= 0\n}\n\nexport function isPublicContact(contact) {\n  return contact.VerifyFlag & CONF.MM_USERATTRVERIFYFALG_BIZ_BRAND\n}\n\nconst contactProto = {\n  init: function(instance) {\n    this.NickName = convertEmoji(this.__proto__.NickName)\n    this.RemarkName = convertEmoji(this.__proto__.RemarkName)\n    this.DisplayName = convertEmoji(this.__proto__.DisplayName)\n\n    this.isSelf = this.UserName === instance.user.UserName\n\n    return this\n  },\n  getDisplayName: function() {\n    return getDisplayName(this)\n  },\n  canSearch: function(keyword) {\n    if (!keyword) return false\n    keyword = keyword.toUpperCase()\n\n    let isSatisfy = key => (key || '').toUpperCase().indexOf(keyword) >= 0\n    return (\n      isSatisfy(this.RemarkName) ||\n      isSatisfy(this.RemarkPYQuanPin) ||\n      isSatisfy(this.NickName) ||\n      isSatisfy(this.PYQuanPin) ||\n      isSatisfy(this.Alias) ||\n      isSatisfy(this.KeyWord)\n    )\n  }\n}\n\nexport default function ContactFactory(instance) {\n  return {\n    extend: function(contactObj) {\n      let contact = Object.create(contactObj)\n      Object.assign(contact, contactProto)\n      contact.init(instance)\n      return contact\n    },\n    getUserByUserName: function(UserName) {\n      return instance.contacts[UserName]\n    },\n    getSearchUser: function(keyword) {\n      let users = []\n      for (let key in instance.contacts) {\n        if (instance.contacts[key].canSearch(keyword)) {\n          users.push(instance.contacts[key])\n        }\n      }\n      return users\n    },\n    isSelf: function(contact) {\n      return contact.isSelf || contact.UserName === instance.user.UserName\n    },\n    getDisplayName,\n    isRoomContact,\n    isPublicContact,\n    isSpContact\n  }\n}\n"]}